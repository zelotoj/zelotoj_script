#!/bin/sh /etc/rc.common
START=97
STOP=10

export IPSET_NAME=gfwlist
export SERVICE_NAME="${IPSET_NAME}_service"
export SOCK5_PORT=1080
export REDIR_PORT=1081
export DNS_PORT=1053

boot() {
    logger -t $SERVICE_NAME "boot..."
    until iptables-save -t nat | grep -q "^:zone_lan_prerouting"; do
        sleep 1
    done
    start
    return 0
}

reload() {
    restart
    return 0
}

restart() {
    stop
    sleep 1
    start
}

ipset_rule_add() {
    ipset flush $IPSET_NAME || ipset create $IPSET_NAME hash:ip counters timeout 1200
    logger -t $SERVICE_NAME "ipset flush $IPSET_NAME"
    ipset add $IPSET_NAME 8.8.8.8
    ipset add $IPSET_NAME 8.8.4.4
    iptables -t nat -A PREROUTING -p tcp -m set --match-set $IPSET_NAME dst -j REDIRECT --to-port $REDIR_PORT
    iptables -t nat -A OUTPUT -p tcp -m set --match-set $IPSET_NAME dst -j REDIRECT --to-port $REDIR_PORT
    logger -t $SERVICE_NAME "add iptable rules"
    /etc/init.d/dnsmasq restart
}

ipset_rule_remove() {
    iptables -t nat -D PREROUTING -p tcp -m set --match-set $IPSET_NAME dst -j REDIRECT --to-port $REDIR_PORT
    iptables -t nat -D OUTPUT -p tcp -m set --match-set $IPSET_NAME dst -j REDIRECT --to-port $REDIR_PORT
    ipset flush $IPSET_NAME
    logger -t $IPSET_NAME "remove iptable rules"
}

start() {
    logger -t $SERVICE_NAME "start"
    service_start /usr/bin/ss-local -c /etc/shadowsocks.json -A -u -l $SOCK5_PORT -f /var/run/ss-redir.pid
    service_start /usr/bin/ss-redir -c /etc/shadowsocks.json -A -u -l $REDIR_PORT -f /var/run/ss-redir.pid
    service_start /usr/bin/ss-tunnel -c /etc/shadowsocks.json -A -u -l $DNS_PORT -L 8.8.8.8:53 -f /var/run/ss-tunnel.pid
    logger -t $SERVICE_NAME "ss start"
    ipset_rule_add
    logger -t $SERVICE_NAME "start complete"
    return 0
}

stop() {
    logger -t $SERVICE_NAME "stop"
    ipset_rule_remove
    service_stop /usr/bin/ss-local
    service_stop /usr/bin/ss-redir
    service_stop /usr/bin/ss-tunnel
    logger -t $SERVICE_NAME "ss stop"
    logger -t $SERVICE_NAME "stop complete"
    return 0
}
